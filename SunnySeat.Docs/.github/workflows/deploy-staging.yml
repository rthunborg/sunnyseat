name: Deploy to Staging

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: sunnyseat-staging
  DOTNET_VERSION: "8.0.x"

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore SunnySeat.sln

      - name: Build application
        run: dotnet build SunnySeat.sln --configuration Release --no-restore

      - name: Run tests
        run: dotnet test --no-build --configuration Release

      - name: Publish application
        run: dotnet publish src/backend/SunnySeat.Api/SunnySeat.Api.csproj --configuration Release --output ./publish --no-build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: webapp-artifacts
          path: ./publish/

  deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: staging
      url: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: webapp-artifacts
          path: ./publish/

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: ./publish/

      - name: Run health check
        run: |
          echo "Waiting for deployment to be ready..."
          sleep 30

          # Health check with retry
          for i in {1..10}; do
            if curl -f https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/health; then
              echo "? Staging deployment is healthy"
              break
            else
              echo "? Attempt $i: Waiting for health check..."
              sleep 10
            fi
            
            if [ $i -eq 10 ]; then
              echo "? Health check failed after 10 attempts"
              exit 1
            fi
          done

  notify:
    name: Notify Deployment
    runs-on: ubuntu-latest
    needs: [build, deploy]
    if: always()

    steps:
      - name: Notify success
        if: needs.deploy.result == 'success'
        run: |
          echo "? Successfully deployed to staging: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net"

      - name: Notify failure
        if: needs.deploy.result == 'failure'
        run: |
          echo "? Staging deployment failed"
          exit 1
